#!/usr/bin/env ruby
$:.unshift File.expand_path '../libs', File.dirname(__FILE__)
require 'ir_remote'

ir = IR::Remote.new ARGV.shift
ir.temp_pin = 0
ir.on :read do |data|
  p data
end
ir.on :write do |data|
  p data
end
ir.on :analog do |pin, value|
  # puts "[analog#{pin}] #{value}"
end
ir.on :temp do |temp|
  # puts "temp #{temp}"
end

last_ir_data = ""

puts "IR::DATA => #{IR::DATA.keys.inspect}"

loop do
  puts "read/write? [r/w]"
  line = STDIN.gets.strip
  if ["r", "read"].include? line.downcase
    puts "[READ]"
    ir.read do |data|
      last_ir_data = data
    end
  elsif ["w", "write"].include? line.downcase
    puts "[WRITE]"
    ir.write last_ir_data
  elsif IR::DATA.has_key? line
    puts "[#{line}]"
    ir.write IR::DATA[line]
  else
    puts "[#{line}] no data"
  end
  sleep 2
end
